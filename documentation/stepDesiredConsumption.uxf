<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="11.3">
  <help_text>

// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.ActivityDiagramText</type>
    <coordinates>
      <x>0</x>
      <y>390</y>
      <w>1075</w>
      <h>1979</h>
    </coordinates>
    <panel_attributes>title:Consumer.stepWorkerConsumption()
Start
if unemployed, set disposableIncome to Context.unemploymentDole;\else use disposable income computed above
avoid consumer to have a desiredConsumption less that subsistence level
compute wealth as sum of bankAccounts
empty demandsList
set total desiredDemand
While[for each product type:\while\OfficeForStatistics.\industriesList.\hasNext()]
	determine desiredDemand for this product type\based on the total desiredDemand computed\above
	create a new AproductDemand having an amount\equal to this product type desiredDemand
	add the productDemand to the demandsList
financialResourcesInBankAccounts=0\debtInBankAcounts=0\unpaidAmountInBankAccounts=0
While[while\bankAccountsList.\hasNext()]
	get bankAccount
	increase unpaidAmountInBankAccounts\by this account unpaidAmount
	If
		[if\account&gt;0]
		increase financialResourcesInBankAccounts\by account

		[if\account&lt;=0]
		increase debtInBankAccounts\by account
	EndIf

identification of bestBankAccount and worstBankAccount\\(the bestBankAccount is set to null if the consumer has\unpaid amount in all the bank accounts)

If
	[if\desiredDemand+\unpaidAmountInBankAccounts\&lt;=\disposableIncome+\financialResources]


	[if\desiredDemand+\unpaidAmountInBankAccounts\&gt;\disposableIncome+\financialResources]
	If
		[if\a bank with no\unpayd amount\exists]
		set the desired credit in\the bestBankAccount as\account+\(desiredDemand +\unpaidAmountInBankAccounts-\disposableIncome -\financialResources)

		[else]
End
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.SynchBarHorizontal</type>
    <coordinates>
      <x>10</x>
      <y>630</y>
      <w>495</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.Text</type>
    <coordinates>
      <x>10</x>
      <y>630</y>
      <w>436</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>Start computation and allocation of desired demand</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.SynchBarHorizontal</type>
    <coordinates>
      <x>10</x>
      <y>1030</y>
      <w>500</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.Text</type>
    <coordinates>
      <x>10</x>
      <y>1010</y>
      <w>370</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>End computation and allocation of desired demand</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.Text</type>
    <coordinates>
      <x>10</x>
      <y>1040</y>
      <w>370</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>Start computation of financial resources</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.Text</type>
    <coordinates>
      <x>10</x>
      <y>1600</y>
      <w>370</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>End computation of financial resources</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.SynchBarHorizontal</type>
    <coordinates>
      <x>10</x>
      <y>1030</y>
      <w>500</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.SynchBarHorizontal</type>
    <coordinates>
      <x>10</x>
      <y>1030</y>
      <w>500</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.Text</type>
    <coordinates>
      <x>10</x>
      <y>1720</y>
      <w>370</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>Ask for credit to best bank account if needed</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.ActivityDiagramText</type>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>461</w>
      <h>337</h>
    </coordinates>
    <panel_attributes>title:Consumer.stepConsumption()
Start
If
	[if\isStudent]
	setpStudentConsumption

	[esle]
	setpWorkerConsumption
End
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.Text</type>
    <coordinates>
      <x>530</x>
      <y>200</y>
      <w>330</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>The Consumer.stepWorkerConsumption()
method is dettailed below.

The Consumet.stepStudentConsumption()
is not reported because it is equal to 
the Consumer.stepWorkerConsumption()
except the following:
wage=0
disposableIncome=0
desiredDemand=Context.costEdu;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>400</x>
      <y>180</y>
      <w>140</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>120;30;30;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.custom.SynchBarHorizontal</type>
    <coordinates>
      <x>10</x>
      <y>1620</y>
      <w>500</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.SynchBarHorizontal</type>
    <coordinates>
      <x>10</x>
      <y>1710</y>
      <w>500</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
